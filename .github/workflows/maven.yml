# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Test
on:
  push:
    branches: [ J2EE ]
  pull_request:
    branches: [ J2EE ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: tomcat deploy
        run: curl -v -T /home/runner/work/jenkins-docker/jenkins-docker/target/onlinebookstore-0.0.1-SNAPSHOT.war http://localhost:8091

     
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sonamsuragini-alt_jenkins-docker
      - name: Trufflehog Actions Scan
        uses: edplato/trufflehog-actions-scan@v0.9k-beta
      - name: DevSkim
        uses: microsoft/DevSkim-Action@v1
        with:
        # The sub directory of the repository root to scan. Repository root used by default.
        # Optionally scan the contents of archives.
         should-scan-archives: false
        # The filename for the output.
         output-filename: devskim-results.sarif
    
      - name: Upload Sarif
        uses: github/codeql-action/upload-sarif@v1
        with:
         sarif_file: devskim-results.sarif
      - name: OWASP ZAP
        uses: zaproxy/action-baseline@v0.4.0
        with:
           # Target URL
           target: "http://localhost:8091"
           fail_action: false
           docker_name: owasp/zap2docker-stable
           token: ${{ github.token }}
           issue_title: Security Tests
